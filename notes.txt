ZMIENnE
function a(){
	var a = 5;
	if (){
		var a = 6
	}
}

var ignoruje bloki(scope), var a w przykladzie powyzej to ta sama zmienna

W let jezeli stworzymy w 2 blokach, to w kazdym z blokow to zupelnie inne zmienne 

function a(){
	let a = 5;
	if(){
		let a = 6
	}
}

1) Najpierw ladujemy html, potem js zeby uzytkownik nie czekal patrzac na pusty ekrean.
2) Scrip z js na dole body zeby nie robic domcontentloaded w js -> kod jest czytany od gory do dolu 

Refactor - poszukac tego dodatku do VC studio


constructor - miejsce, gdzie przekazujemy dane ktore sa niezbedne do istnienia obiektu 




const images = ['images/confront.png', 'images/warsawjs.png'];
const newImage = document.createElement('img');
const gallery = document.getElementById('images');

// function showFavourite(e){
// 	// !this.classList.contains('image--favourite') ?
// 	// this.classList.add('image--favourite') :
// 	// this.classList.remove('image--favourite');

// 	if(e.target.tagName === 'IMG'){
// 		e.target.classList.toggle('image--favourite')
// 	}
// }

// image.addEventListener('click', showFavourite);

class Image {
	constructor(path){
		this.path = path
	}

	show(){
		newImage.setAttribute('src', this.path);	
		this.img = newImage;
		
		gallery.appendChild(newImage);
		
		newImage.addEventListener('click', () => this.toggleFavourite(newImage));
	}

	toggleFavourite(img){
		img.classList.toggle('image--favourite');
		// this.img.classList.toggle('image--favourite');
		
	}

}


images.forEach( photo => {

	const singlePhoto = new Image(photo)
	singlePhoto.show()

})

// const arr2 = images.map(photo => new Image(photo)).forEach(photo => photo.show());
// images.map(photo => new Image(photo)).forEach(photo => photo.show());


// console.log(arr2);

// arr2.show()





// class Images {

// 	constructor(data){
// 		this.data = data;
// 		// this.show =  
// 	}

// 	create(){
// 		this.data.forEach( photo => {

// 			const newImage = document.createElement('img');
// 			newImage.setAttribute('src', photo);
		
// 			image.appendChild(newImage);
		
// 		})
// 	}

// 	// showFavourite(e){
// 	// 	if(e.target.tagName === 'IMG'){
// 	// 		e.target.classList.toggle('image--favourite')
// 	// 	}
// 	// }
	
// }


//  const gallery = new Images(images)
//  gallery.create()